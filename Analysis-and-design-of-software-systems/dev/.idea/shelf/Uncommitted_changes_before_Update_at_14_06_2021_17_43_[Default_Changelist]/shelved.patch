Index: src/Presentation/Controllers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Presentation;\r\n\r\nimport Business.ApplicationFacade.*;\r\nimport Business.ApplicationFacade.iControllers.iDriverRoleController;\r\nimport Business.ApplicationFacade.iControllers.iManagerRoleController;\r\nimport Business.ApplicationFacade.iControllers.iRegularRoleController;\r\nimport Business.StockBusiness.StoreController;\r\nimport Business.StockBusiness.iStoreController;\r\nimport Business.SupplierBusiness.ISupplierService;\r\nimport Business.SupplierBusiness.Item;\r\nimport Business.SupplierBusiness.facade.SupplierService;\r\n\r\nimport java.time.DayOfWeek;\r\nimport java.time.LocalDate;\r\nimport java.util.*;\r\n\r\npublic class Controllers {\r\n    private final iRegularRoleController rc;\r\n    private final iManagerRoleController mc;\r\n    private final iDriverRoleController dc;\r\n    private final TransportationController tc;\r\n    private final SupplierService sc;\r\n    private final iStoreController st;\r\n    private int currBID;\r\n\r\n    public Controllers() {\r\n        rc = new RegularRoleController();\r\n        mc = new ManagerRoleController(rc.getUtils());\r\n        dc = new DriverRoleController(mc);\r\n        tc = new TransportationController(mc);\r\n        sc = new SupplierService();\r\n        st = new StoreController(); //TODO: check if this is the constructor to call\r\n        currBID = -1;\r\n    }\r\n\r\n    public iManagerRoleController getMc() {\r\n        return mc;\r\n    }\r\n\r\n    public iRegularRoleController getRc() {\r\n        return rc;\r\n    }\r\n\r\n    public iDriverRoleController getDc() {\r\n        return dc;\r\n    }\r\n\r\n    public TransportationController getTc() {\r\n        return tc;\r\n    }\r\n\r\n    public SupplierService getSc() {\r\n        return sc;\r\n    }\r\n\r\n    public iStoreController getSt() {\r\n        return st;\r\n    }\r\n\r\n    public void init() {\r\n        initializeEmpsModule();\r\n        initializeTransportationModule();\r\n    }\r\n\r\n    private void initializeTransportationModule() {\r\n\r\n\r\n        tc.addTruck(1,3500,\"Subaro\",3000,3500);\r\n        tc.addTruck(2,4500,\"Volvo\",4000,5000);\r\n        tc.addTruck(3,11000,\"Mercedese\",7000,12000);\r\n        tc.addTruck(4,13500,\"Dodge\",10000,15000);\r\n\r\n\r\n        int[] bankDetails = {123, 456, 789};\r\n        int[] terms = {1000, 5, 10};\r\n        dc.addNewDriver(100, \"Driver1\", bankDetails, 40000,LocalDate.now(),terms,13000);\r\n        dc.addNewDriver(101, \"Driver2\", bankDetails, 40000,LocalDate.now(),terms,13000);\r\n    }\r\n\r\n\r\n    private void initializeEmpsModule() {\r\n        int[] bankDetails = {123, 456, 789};\r\n        int[] terms = {1000, 5, 10};\r\n        rc.createBranch(1, \"PersonnelManager\", bankDetails, 150000, terms, \"sivan\", \"Tel Aviv\", 12, 2, \"South\", \"rom\", \"507350111\");\r\n        rc.createBranch(2, \"PersonnelManager\", bankDetails, 120000, terms, \"Zalman\", \"Haifa\", 12, 2, \"Center\", \"dor\", \"512156465\");\r\n        rc.createBranch(3, \"PersonnelManager\", bankDetails, 100000, terms, \"Alenbi\", \"Beer-Sheva\", 12, 2, \"North\", \"bar\", \"507350111\");\r\n        rc.EnterBranch(1);\r\n        rc.Login(1);\r\n        mc.addEmployee(6, \"StoreKeeperA\", bankDetails, 10000, \"StoreKeeper\", LocalDate.now(), terms);\r\n        mc.addEmployee(7, \"CashierA\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(8, \"CashierB\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(9, \"StoreKeeperB\", bankDetails, 10000, \"StoreKeeper\", LocalDate.now(), terms);\r\n        mc.addEmployee(10, \"CashierC\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(11, \"ShiftManagerA\", bankDetails, 40000, \"ShiftManager\", LocalDate.now(), terms);\r\n        mc.addEmployee(12, \"ShiftManagerB\", bankDetails, 40000, \"ShiftManager\", LocalDate.now(), terms);\r\n        Map<String, Integer> morning = new HashMap<>();\r\n        morning.put(\"Driver\", 0);\r\n        morning.put(\"Cashier\", 1);\r\n        morning.put(\"Sorter\", 1);\r\n        morning.put(\"ShiftManager\", 1);\r\n        morning.put(\"StoreKeeper\", 0);\r\n        Map<String, Integer> night = new HashMap<>();\r\n        night.put(\"Cashier\", 1);\r\n        night.put(\"ShiftManager\", 1);\r\n        night.put(\"Driver\", 0);\r\n        night.put(\"Sorter\", 1);\r\n        night.put(\"StoreKeeper\", 0);\r\n        SortedMap<String, Map<String, Integer>> defaultRolesAmount = new TreeMap<>();\r\n        defaultRolesAmount.put(\"Night\", night);\r\n        defaultRolesAmount.put(\"Morning\", morning);\r\n        mc.defaultShifts(defaultRolesAmount);\r\n        rc.Logout();\r\n\r\n        rc.EnterBranch(2);\r\n        rc.Login(2);\r\n        mc.addEmployee(13, \"StoreKeeperA\", bankDetails, 10000, \"StoreKeeper\", LocalDate.now(), terms);\r\n        mc.addEmployee(14, \"CashierA\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(15, \"CashierB\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(16, \"StoreKeeperB\", bankDetails, 10000, \"StoreKeeper\", LocalDate.now(), terms);\r\n        mc.addEmployee(17, \"CashierC\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(18, \"ShiftManagerA\", bankDetails, 40000, \"ShiftManager\", LocalDate.now(), terms);\r\n        mc.addEmployee(19, \"ShiftManagerB\", bankDetails, 40000, \"ShiftManager\", LocalDate.now(), terms);\r\n        mc.defaultShifts(defaultRolesAmount);\r\n        rc.Logout();\r\n\r\n        rc.EnterBranch(3);\r\n        rc.Login(3);\r\n        mc.addEmployee(20, \"StoreKeeperA\", bankDetails, 10000, \"StoreKeeper\", LocalDate.now(), terms);\r\n        mc.addEmployee(21, \"CashierA\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(22, \"CashierB\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(23, \"StoreKeeperB\", bankDetails, 10000, \"StoreKeeper\", LocalDate.now(), terms);\r\n        mc.addEmployee(24, \"CashierC\", bankDetails, 10000, \"Cashier\", LocalDate.now(), terms);\r\n        mc.addEmployee(25, \"ShiftManagerA\", bankDetails, 40000, \"ShiftManager\", LocalDate.now(), terms);\r\n        mc.addEmployee(26, \"ShiftManagerB\", bankDetails, 40000, \"ShiftManager\", LocalDate.now(), terms);\r\n        mc.defaultShifts(defaultRolesAmount);\r\n        rc.Logout();\r\n\r\n\r\n        rc.EnterBranch(1);\r\n        rc.Login(6);\r\n        rc.addConstConstraint(DayOfWeek.SUNDAY, \"Night\", \"tired\");\r\n        rc.Logout();\r\n        rc.Login(1);\r\n        rc.EnterBranch(1);\r\n        mc.createWeekShifts();\r\n        rc.Logout();\r\n    }\r\n\r\n    private void initializeSuppModule() {\r\n        sc.addSupplier(\"Supplier1\", 0, 0, 0, \"cash\");\r\n        sc.addSupplier(\"Supplier2\", 1, 1, 1, \"bank transfer\");\r\n        sc.addSupplier(\"Supplier3\", 2, 2, 2, \"bank transfer\");\r\n        sc.addSupplier(\"Supplier4\", 3, 3, 3, \"check\");\r\n        sc.addSupplier(\"Supplier5\", 4, 4, 4, \"cash\");\r\n        sc.addItem(0, 0, \"meat\", 21.99, 19.99, 10,\r\n                \"Tnuva\", 1, LocalDate.now().plusYears(1), 1).getOutObject();\r\n        sc.addItem(0, 0, \"minced meat\", 39.99, 34.99, 100,\r\n                \"Dabah\", 1, LocalDate.now().plusYears(1), 2);\r\n        sc.addItem(0, 1, \"stake\", 70.5, 65, 50,\r\n                \"Dabah\", 1, LocalDate.now().plusMonths(1), 1.5);\r\n        sc.addItem(1, 2, \"yogurt\", 9.99, 8.99, 200,\r\n                \"Tara\", 2, LocalDate.now().plusMonths(1), 0.1);\r\n        sc.addItem(1, 3, \"cheese cake\", 35, 34, 150,\r\n                \"Cheese Cake Factory\", 2, LocalDate.now().plusDays(14), 1);\r\n        sc.addItem(1, 0, \"gum\", 1.99, 1.5, 1000,\r\n                \"Hubba\", 3, LocalDate.now().plusYears(1000), 0.01);\r\n        sc.addItem(1, 1, \"lollipop\", 0.5, 0.35, 1000,\r\n                \"Hubba\", 3, LocalDate.now().plusYears(1000), 0.01);\r\n        sc.addItem(2, 2, \"windshield wiper\", 15.99, 14, 500,\r\n                \"Sano\", 3, LocalDate.now().plusYears(1), 0.5);\r\n        sc.addItem(2, 3, \"broom\", 19.99, 17, 400,\r\n                \"Sano\", 3, LocalDate.now().plusYears(50), 1);\r\n        sc.addItem(3, 0, \"soda\", 10.99, 9, 350,\r\n                \"Cola-Cola\", 3, LocalDate.now().plusMonths(6), 3);\r\n        sc.addItem(3, 0, \"sprite \", 10.99, 8, 700,\r\n                \"Cola-Cola\", 3, LocalDate.now().plusMonths(3), 1.5);\r\n        sc.addItem(3, 1, \"fanta\", 10.99, 10, 200,\r\n                \"Cola-Cola\", 3, LocalDate.now().plusMonths(3), 1.5);\r\n        sc.addItem(3, 1, \"grape juice\", 10.99, 9.99, 350,\r\n                \"PriGat\", 3, LocalDate.now().plusMonths(9), 1);\r\n        sc.addItem(3, 2, \"orange juice\", 10.99, 9.99, 400,\r\n                \"PriGat\", 3, LocalDate.now().plusMonths(9), 1);\r\n        sc.addItem(3, 2, \"water\", 5.99, 4.5, 650,\r\n                \"Neviot\", 3, LocalDate.now().plusYears(3), 2);\r\n        sc.addItem(4, 3, \"apple\", 1.99, 1.5, 1200,\r\n                \"Sami\", 3, LocalDate.now().plusMonths(1), 0.05);\r\n        sc.addItem(4, 3, \"orange\", 1.99, 1.5, 1300,\r\n                \"Sami\", 3, LocalDate.now().plusMonths(1), 0.05);\r\n        sc.addItem(4, 0, \"tomato\", 0.99, 0.5, 1150,\r\n                \"Orna\", 3, LocalDate.now().plusMonths(1), 0.05);\r\n        sc.addItem(4, 0, \"onion\", 1.5, 1, 1200,\r\n                \"Orna\", 3, LocalDate.now().plusMonths(1), 0.05);\r\n        for (int i = 0; i < 19; i++) {\r\n            if (i <= 2) sc.addQuantityDocument(0, i, 3 + i, 2 + i);\r\n            else if (i <= 6) sc.addQuantityDocument(1, i, 2 + i, 1 + i);\r\n            else if (i <= 8) sc.addQuantityDocument(2, i, i, 3);\r\n            else if (i <= 14) sc.addQuantityDocument(3, i, i - 8, 1);\r\n            else sc.addQuantityDocument(4, i, i - 14, i - 14);\r\n        }\r\n        sc.addSupplierAgreement(0, 200, 1, true, true);\r\n        sc.addSupplierAgreement(1, 100, 0, false, true);\r\n        sc.addSupplierAgreement(2, 150, 2, true, false);\r\n        sc.addSupplierAgreement(3, 100, 1, false, false);\r\n        sc.addContactEmail(0, \"BGU@bgu.ac.il\", \"Rami\");\r\n        sc.addContactEmail(0, \"Lucture@bgu.ac.il\", \"Rami\");\r\n        sc.addContactEmail(1, \"Intel@gamil.com\", \"Lidor\");\r\n        sc.addContactEmail(3, \"PleaseGiveUs100@bgu.ac.il\", \"Kfir\");\r\n        sc.addContactEmail(3, \"PleaseGiveUs100@gamil.com\", \"Ori\");\r\n        sc.addContactEmail(4, \"AmirTheKing@bgu.ac.il\", \"Amir\");\r\n        sc.addContactEmail(4, \"Cotel@GOD.com\", \"Gabriel\");\r\n        sc.addContactEmail(4, \"SneBoher@GOD.com\", \"Moshes\");\r\n        sc.addContactPhone(0, \"050-0000000\", \"Tali\");\r\n        sc.addContactPhone(1, \"000-0000000\", \"Jesus\");\r\n        sc.addContactPhone(2, \"054-1234567\", \"Hani\");\r\n        sc.addContactPhone(3, \"054-9849521\", \"Kfir\");\r\n        sc.addContactPhone(3, \"052-4737283\", \"Ori\");\r\n        Hashtable<Integer, Integer> firstHash = new Hashtable<>();\r\n        Hashtable<Integer, Integer> secondHash = new Hashtable<>();\r\n        Hashtable<Integer, Integer> thirdHash = new Hashtable<>();\r\n        firstHash.put(1, 100);\r\n        firstHash.put(2, 50);\r\n        firstHash.put(3, 25);\r\n        secondHash.put(4, 45);\r\n        secondHash.put(5, 5);\r\n        secondHash.put(6, 10);\r\n        thirdHash.put(7, 20);\r\n        thirdHash.put(8, 50);\r\n        thirdHash.put(9, 150);\r\n        thirdHash.put(10, 5);\r\n        sc.addRegularOrder(0, 1, firstHash);\r\n        sc.addRegularOrder(1, 2, secondHash);\r\n        sc.addRegularOrder(2, 2, thirdHash);\r\n        sc.addNeededOrder(0, 3, 1);\r\n        sc.addNeededOrder(1, 1, 2);\r\n        sc.addNeededOrder(2, 2, 3);\r\n        sc.addItemToOrder(0, 0, 0, 2);\r\n        sc.addItemToOrder(0, 0, 2, 5);\r\n        sc.addItemToOrder(2, 1, 8, 10);\r\n        sc.addItemToOrder(3, 2, 11, 4);\r\n        sc.addItemToOrder(4, 3, 15, 5);\r\n        sc.addItemToOrder(4, 4, 18, 1);\r\n    }\r\n\r\n\r\n\r\n    public int getCurrBID() {\r\n        return currBID;\r\n    }\r\n\r\n    public void setCurrBID(int currBID) {\r\n        this.currBID = currBID;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Presentation/Controllers.java b/src/Presentation/Controllers.java
--- a/src/Presentation/Controllers.java	(revision e1d70971379a0db18c0ced9c23e91ad4b3149116)
+++ b/src/Presentation/Controllers.java	(date 1623679917888)
@@ -153,7 +153,7 @@
         sc.addSupplier("Supplier4", 3, 3, 3, "check");
         sc.addSupplier("Supplier5", 4, 4, 4, "cash");
         sc.addItem(0, 0, "meat", 21.99, 19.99, 10,
-                "Tnuva", 1, LocalDate.now().plusYears(1), 1).getOutObject();
+                "Tnuva", 1, LocalDate.now().plusYears(1), 1);
         sc.addItem(0, 0, "minced meat", 39.99, 34.99, 100,
                 "Dabah", 1, LocalDate.now().plusYears(1), 2);
         sc.addItem(0, 1, "stake", 70.5, 65, 50,
